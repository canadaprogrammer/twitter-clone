{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Ctwitt.js","components/CtwittFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","storage","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","signInActive","setSignInActive","onChange","evt","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","onClickSwitch","className","type","placeholder","required","onClick","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","size","faGoogle","faGithub","Ctwitt","ctwittObj","isOwner","editing","setEditing","text","setText","onClickDelete","window","confirm","deleteDoc","doc","id","attachmentURL","attachmentRef","ref","deleteObject","toggleEditing","prev","onChangeCtwitt","updateDoc","src","width","height","alt","faUpload","faTimes","faPencilAlt","faTrash","CtwittFactory","userObj","attachment","setAttachment","uid","uuidv4","uploadString","response","getDownloadURL","addDoc","collection","createdAt","Date","now","creatorId","document","querySelector","maxLength","htmlFor","faArrowRight","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","ctwitts","setCtwitts","useEffect","q","query","orderBy","onSnapshot","snapshot","docs","map","ct","Profile","refreshUserName","displayName","newName","setNewName","navigate","useNavigate","onLogOutClick","signOut","getMyCtwitts","where","getDocs","updateProfile","Navigation","to","AppRouter","isLoggedIn","path","index","element","App","init","setInit","setUserObj","onAuthStateChanged","user","currentUser","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.882922d4.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { getStorage } from 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const auth = getAuth();\r\nexport const db = getFirestore(app);\r\nexport const storage = getStorage(app);\r\n\r\nexport default app;\r\n","import React, { useState } from 'react';\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { auth } from 'fbase';\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [signInActive, setSignInActive] = useState(false);\r\n  const onChange = (evt) => {\r\n    const {\r\n      target: { name, value },\r\n    } = evt;\r\n    if (name === 'email') {\r\n      setEmail(value);\r\n    } else if (name === 'password') {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (evt) => {\r\n    evt.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await createUserWithEmailAndPassword(auth, email, password);\r\n      } else {\r\n        data = await signInWithEmailAndPassword(auth, email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n  // const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  const onClickSwitch = (evt) => {\r\n    const {target: {name}} = evt;\r\n    if(name === 'signIn') {\r\n      setNewAccount(false);\r\n      setSignInActive(true);\r\n    }\r\n    if(name === 'signUp') {\r\n      setNewAccount(true);\r\n      setSignInActive(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"authForm\">\r\n        <input\r\n          name='email'\r\n          type='text'\r\n          placeholder='Email'\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          name='password'\r\n          type='password'\r\n          placeholder='Password'\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type='submit'\r\n          value={newAccount ? 'Create Account' : 'Sign In'} className=\"btn btnBlue authSubmit\"\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      {/* <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? 'Sign In' : 'Create Account'}\r\n      </span> */}\r\n      <div className=\"authSwitch\">\r\n        <button onClick={onClickSwitch} name=\"signIn\" className={signInActive ? 'activeSwitch' : ''}>Sign In</button>\r\n        <button onClick={onClickSwitch} name=\"signUp\" className={!signInActive ? 'activeSwitch' : ''}>Sign Up</button>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AuthForm;","import React, { useState } from 'react';\r\nimport {\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  GithubAuthProvider,\r\n} from 'firebase/auth';\r\nimport { auth } from 'fbase';\r\nimport AuthForm from 'components/AuthForm';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter, faGoogle, faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Auth = () => {\r\n  const [error, setError] = useState('');\r\n  const onSocialClick = async (evt) => {\r\n    const {\r\n      target: { name },\r\n    } = evt;\r\n    let provider;\r\n    if (name === 'google') {\r\n      provider = new GoogleAuthProvider();\r\n    } else if (name === 'github') {\r\n      provider = new GithubAuthProvider();\r\n    }\r\n    try {\r\n      await signInWithPopup(auth, provider);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <FontAwesomeIcon icon={faTwitter} className=\"twitterIcon\" size=\"3x\" />\r\n      <AuthForm />\r\n      <div className=\"authSocialContainer\">\r\n        <button onClick={onSocialClick} name='google' className=\"btn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name='github' className=\"btn\">\r\n          Continue with GitHub <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n      {error && <span className=\"authError\">{error}</span>}\r\n    </>\r\n  );\r\n};\r\nexport default Auth;\r\n","import React, { useState } from 'react';\r\nimport { doc, deleteDoc, updateDoc } from 'firebase/firestore';\r\nimport { deleteObject, ref } from 'firebase/storage';\r\nimport { db, storage } from 'fbase';\r\nimport {\r\n  faTrash,\r\n  faTimes,\r\n  faUpload,\r\n  faPencilAlt,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst Ctwitt = ({ ctwittObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [text, setText] = useState(ctwittObj.text);\r\n  const onClickDelete = async () => {\r\n    const ok = window.confirm(`Are you sure to delete ${ctwittObj.text}?`);\r\n    if (ok) {\r\n      await deleteDoc(doc(db, 'ctwitt', ctwittObj.id));\r\n      if (ctwittObj.attachmentURL !== '') {\r\n        const attachmentRef = ref(storage, ctwittObj.attachmentURL);\r\n        await deleteObject(attachmentRef);\r\n      }\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onChangeCtwitt = (evt) => {\r\n    const {\r\n      target: { value },\r\n    } = evt;\r\n    setText(value);\r\n  };\r\n  const onSubmit = async (evt) => {\r\n    evt.preventDefault();\r\n    await updateDoc(doc(db, 'ctwitt', ctwittObj.id), {\r\n      text,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  return (\r\n    <li className='ctwittList'>\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className='ctwittListForm'>\r\n            <div className='ctwitt'>\r\n              {ctwittObj.attachmentURL ? (\r\n                <>\r\n                  <img\r\n                    src={ctwittObj.attachmentURL}\r\n                    width='100px'\r\n                    height='50px'\r\n                    alt='attached'\r\n                    className='attachedImage'\r\n                  />\r\n                  <input\r\n                    type='text'\r\n                    value={text}\r\n                    onChange={onChangeCtwitt}\r\n                    required\r\n                    className='widthImage'\r\n                  />\r\n                </>\r\n              ) : (\r\n                <input\r\n                  type='text'\r\n                  value={text}\r\n                  onChange={onChangeCtwitt}\r\n                  required\r\n                />\r\n              )}\r\n            </div>\r\n            <button type='submit'>\r\n              <FontAwesomeIcon icon={faUpload} />\r\n            </button>\r\n            <button onClick={toggleEditing}>\r\n              <FontAwesomeIcon icon={faTimes} />\r\n            </button>\r\n          </form>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className='ctwitt'>\r\n            {ctwittObj.attachmentURL ? (\r\n              <>\r\n                <img\r\n                  src={ctwittObj.attachmentURL}\r\n                  width='100px'\r\n                  height='50px'\r\n                  alt='attached'\r\n                  className='attachedImage'\r\n                />\r\n                <span className='widthImage'>{text}</span>\r\n              </>\r\n            ) : (\r\n              <span>{text}</span>\r\n            )}\r\n          </div>\r\n          {isOwner && (\r\n            <>\r\n              <button onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </button>\r\n              <button onClick={onClickDelete}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Ctwitt;\r\n","import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { collection, addDoc } from 'firebase/firestore';\r\nimport { ref, uploadString, getDownloadURL } from 'firebase/storage';\r\nimport { db, storage } from 'fbase';\r\nimport { faArrowRight, faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst CtwittFactory = ({userObj}) => {\r\n  const [text, setText] = useState('');\r\n  const [attachment, setAttachment] = useState('');\r\n  const onSubmit = async (evt) => {\r\n    evt.preventDefault();\r\n    let attachmentURL = '';\r\n    if (attachment !== '') {\r\n      const attachmentRef = ref(storage, `${userObj.uid}/${uuidv4()}`);\r\n      const response = await uploadString(\r\n        attachmentRef,\r\n        attachment,\r\n        'data_url'\r\n      );\r\n      attachmentURL = await getDownloadURL(response.ref);\r\n    }\r\n    await addDoc(collection(db, 'ctwitt'), {\r\n      text,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentURL,\r\n    });\r\n    setText('');\r\n    setAttachment('');\r\n    const inputFile = document.querySelector('input[type=\"file\"]');\r\n    inputFile.value = '';\r\n  };\r\n  const onChange = (evt) => {\r\n    const {\r\n      target: { value },\r\n    } = evt;\r\n    setText(value);\r\n  };\r\n  const onChangeFile = (evt) => {\r\n    const {\r\n      target: { files },\r\n    } = evt;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClickClearAttachment = (evt) => {\r\n    evt.preventDefault();\r\n    setAttachment('');\r\n  };\r\n  return (\r\n    <>\r\n      <form className=\"formAddCtwitt\">\r\n        <input\r\n          value={text}\r\n          onChange={onChange}\r\n          type='text'\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120} className=\"inputCtwitt\"\r\n        />\r\n        <label htmlFor='inputSubmit'><FontAwesomeIcon icon={faArrowRight} className=\"btnSubmit\" /></label>\r\n        <input type='submit' value='' onClick={onSubmit} className=\"submitCtwitt\" id=\"inputSubmit\" />\r\n      </form>\r\n      <label htmlFor=\"addPhoto\" className=\"btnAddPhoto\">Add Photo <FontAwesomeIcon icon={faPlus} /></label>\r\n      <input type='file' accept='image/*' onChange={onChangeFile} className=\"addPhoto\" id=\"addPhoto\" />\r\n      {attachment && (\r\n        <div className=\"imagePreview\">\r\n          <img src={attachment} alt='attached' />\r\n          <button onClick={onClickClearAttachment} className=\"btn btnBlue clearBtn\">Clear</button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CtwittFactory;","import React, { useEffect, useState } from 'react';\r\nimport { collection, onSnapshot, query, orderBy } from 'firebase/firestore';\r\nimport { db } from 'fbase';\r\nimport Ctwitt from 'components/Ctwitt';\r\nimport CtwittFactory from 'components/CtwittFactory';\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [ctwitts, setCtwitts] = useState([]);\r\n  useEffect(() => {\r\n    const q = query(collection(db, 'ctwitt'), orderBy('createdAt', 'desc'));\r\n    onSnapshot(q, (snapshot) => {\r\n      const ctwittObj = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setCtwitts(ctwittObj);\r\n    });\r\n  }, []);\r\n  \r\n  return (\r\n    <div className=\"w-100\">\r\n      <CtwittFactory userObj={userObj} />\r\n      <ul>\r\n        {ctwitts.map((ct) => (\r\n          <Ctwitt\r\n            key={ct.id}\r\n            ctwittObj={ct}\r\n            isOwner={ct.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { signOut, updateProfile } from 'firebase/auth';\r\nimport { auth, db } from 'fbase';\r\nimport { getDocs, collection, query, where, orderBy } from 'firebase/firestore';\r\n\r\nconst Profile = ({ userObj, refreshUserName }) => {\r\n  const [newName, setNewName] = useState(userObj.displayName ?? 'Anonymous');\r\n  const navigate = useNavigate();\r\n  const onLogOutClick = async () => {\r\n    try {\r\n      await signOut(auth);\r\n      navigate('/');\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const getMyCtwitts = async () => {\r\n      const q = query(\r\n        collection(db, 'ctwitt'),\r\n        where('creatorId', '==', userObj.uid),\r\n        orderBy('createdAt', 'desc')\r\n      );\r\n      const ctwitts = await getDocs(q);\r\n      console.log(ctwitts.docs.map((doc) => doc.data()));\r\n    };\r\n    getMyCtwitts();\r\n  }, [userObj.uid]);\r\n  const onChange = (evt) => {\r\n    const {\r\n      target: { value },\r\n    } = evt;\r\n    setNewName(value);\r\n  };\r\n  const onSubmit = async (evt) => {\r\n    evt.preventDefault();\r\n    if (userObj.displayName !== newName) {\r\n      // await updateProfile(userObj, { displayName: newName });\r\n      await updateProfile(userObj, { displayName: newName });\r\n    }\r\n    refreshUserName();\r\n  };\r\n  return (\r\n    <div className='profileWrapper'>\r\n      <form className='profileForm'>\r\n        <input\r\n          type='text'\r\n          placeholder='display name'\r\n          onChange={onChange}\r\n          value={newName}\r\n        />\r\n        <button type='submit' onClick={onSubmit} className='btn btnBlue'>\r\n          Update Profile\r\n        </button>\r\n      </form>\r\n      <hr />\r\n      <button onClick={onLogOutClick} className='btn btnRed'>\r\n        Log Out\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul>\r\n      <li>\r\n        <Link className=\"btn\" to='/'>Home</Link>\r\n      </li>\r\n      <li>\r\n        <Link className=\"btn\" to='/profile'>{userObj.displayName ?? 'Anonymous'}'s Profile</Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { HashRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport Auth from 'routes/Auth';\r\nimport Home from 'routes/Home';\r\nimport Profile from 'routes/Profile';\r\nimport Navigation from 'components/Navigation';\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nconst AppRouter = ({ refreshUserName, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Routes>\r\n        {isLoggedIn ? (\r\n          <Route path='/'>\r\n            <Route index element={<Home userObj={userObj} />} />\r\n            <Route\r\n              path='profile'\r\n              element={\r\n                <Profile userObj={userObj} refreshUserName={refreshUserName} />\r\n              }\r\n            />\r\n          </Route>\r\n        ) : (\r\n          <Route path='/' element={<Auth />} />\r\n        )}\r\n      </Routes>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useState, useEffect } from 'react';\nimport AppRouter from 'components/Router';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { auth } from 'fbase';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  // const [newUserName, setNewUserName] = useState('');\n  useEffect(() => {\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        setUserObj(user);\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUserName = () => {\n    // const user = auth.currentUser;\n    // setNewUserName(user.displayName);\n    setUserObj({ ...auth.currentUser });\n  };\n  return (\n    <div className=\"container\">\n      {init ? (\n        <AppRouter\n          refreshUserName={refreshUserName}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        'Initializing...'\n      )}\n      {/* <footer>&copy; Cloning Twitter {new Date().getFullYear()}</footer> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n// import 'fbase';\nimport 'styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}